apiVersion: apps/v1
kind: StatefulSet
{{ include "metadata" . }}
spec:
  serviceName: {{ componentFullName }}
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "selectors" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "labels" . | nindent 8 }}
      annotations:
        checksum/config: {{ file "nats/nats.conf" | sha256sum }}
    spec:
      serviceAccountName: {{ componentFullName }}
      shareProcessNamespace: true
      {{- with .App.ImagePullSecret }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      {{- include "podSecurityContext" . | nindent 6 }}
      initContainers:
        - name: pki-init
          image: {{ .Values.pkiInitImage | quote }}
          imagePullPolicy: {{ .Component.ImagePullPolicy | default "IfNotPresent" }}
          {{- include "containerSecurityContext" . | nindent 10 }}
          command:
            - /pki-init.sh
          env:
            - name: KUBEFOX_HOME
              value: /tmp/kubefox
            - name: KUBEFOX_COMPONENT
              value: {{ .Component.Name }}
            - name: KUBEFOX_COMPONENT_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: {{ .Platform.Name }}-env
          volumeMounts:
            - name: pki-init
              mountPath: /pki-init.sh
              subPath: pki-init.sh
            - name: root-ca
              mountPath: /tmp/kubefox/ca.crt
              subPath: ca.crt
            - name: kubefox
              mountPath: /tmp/kubefox
      containers:
        - name: {{ .Component.Name }}
          image: {{ .Component.Image | default (printf "%s/%s:%s" .App.Registry .Component.Name .Component.Commit) | quote }}
          imagePullPolicy: {{ .Component.ImagePullPolicy | default "IfNotPresent" }}
          {{- include "containerSecurityContext" . | nindent 10 }}
          command:
            - "nats-server"
            - "--config"
            - "/etc/nats/nats.conf"
          resources:
            requests:
              memory: 460Mi # 90% of limit, used to set GOMEMLIMIT 
              cpu: 250m
            limits:
              memory: 512Mi
              cpu: 2000m
          env:
            - name: KUBEFOX_COMPONENT_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: {{ .Component.Name }}
                  resource: requests.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  containerName: {{ .Component.Name }}
                  resource: limits.cpu
          envFrom:
            - configMapRef:
                name: {{ .Platform.Name }}-env
          ports:
            - name: client
              containerPort: 4222
            - name: monitor
              containerPort: 8222
          volumeMounts:
            - name: config
              mountPath: /etc/nats
            - name: pid
              mountPath: /var/run/nats
            - name: jetstream
              mountPath: /data
            - name: root-ca
              mountPath: /tmp/kubefox/ca.crt
              subPath: ca.crt
            - name: kubefox
              mountPath: /tmp/kubefox
          startupProbe:
            httpGet:
              path: /healthz
              port: monitor
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 90
          readinessProbe:
            httpGet:
              path: /healthz?js-server-only=true
              port: monitor
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz?js-enabled-only=true
              port: monitor
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                # Send the lame duck shutdown signal to trigger a graceful
                # shutdown nats-server will ignore the TERM signal it receives
                # after this.
                command:
                  - "nats-server"
                  - "-sl=ldm=/var/run/nats/nats.pid"
      volumes:
        - name: config
          configMap:
            name: {{ componentFullName }}-config
        - name: pid
          emptyDir: {}
        - name: root-ca
          configMap:
            name: {{ .Instance.Name }}-root-ca
        - name: pki-init
          configMap:
            name: {{ .Platform.Name }}-pki-init
            defaultMode: 0777
        - name: kubefox
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: jetstream
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.volumeSize | default "8Gi" }}
