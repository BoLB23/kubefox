---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: releases.kubefox.xigxog.io
spec:
  group: kubefox.xigxog.io
  names:
    kind: Release
    listKind: ReleaseList
    plural: releases
    singular: release
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Release is the Schema for the Releases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          details:
            description: ReleaseDetails defines additional details of Release
            properties:
              description:
                type: string
              title:
                type: string
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ReleaseSpec defines the desired state of Release
            properties:
              appDeployment:
                properties:
                  app:
                    properties:
                      commit:
                        pattern: ^[a-z0-9]{40}$
                        type: string
                      containerRegistry:
                        type: string
                      imagePullSecretName:
                        type: string
                      name:
                        type: string
                    required:
                    - commit
                    - name
                    type: object
                  components:
                    additionalProperties:
                      properties:
                        commit:
                          pattern: ^[a-z0-9]{40}$
                          type: string
                        defaultHandler:
                          type: boolean
                        dependencies:
                          additionalProperties:
                            properties:
                              type:
                                enum:
                                - db
                                - kubefox
                                - http
                                type: string
                            required:
                            - type
                            type: object
                          type: object
                        envSchema:
                          additionalProperties:
                            properties:
                              required:
                                type: boolean
                              type:
                                enum:
                                - array
                                - boolean
                                - number
                                - string
                                type: string
                              unique:
                                description: Unique indicates that this environment
                                  variable must have a unique value across all environments.
                                  If the value is not unique then making a dynamic
                                  request or creating a release that utilizes this
                                  variable will fail.
                                type: boolean
                            required:
                            - required
                            - type
                            - unique
                            type: object
                          type: object
                        image:
                          type: string
                        routes:
                          items:
                            properties:
                              id:
                                type: integer
                              priority:
                                type: integer
                              rule:
                                type: string
                            required:
                            - id
                            - rule
                            type: object
                          type: array
                        type:
                          enum:
                          - db
                          - genesis
                          - kubefox
                          - http
                          type: string
                      required:
                      - commit
                      - type
                      type: object
                    minProperties: 1
                    type: object
                  name:
                    minLength: 1
                    type: string
                  resourceVersion:
                    type: string
                  uid:
                    description: UID is a type that holds unique ID values, including
                      UUIDs.  Because we don't ONLY use UUIDs, this is an alias to
                      string.  Being a type captures intent and helps make sure that
                      UIDs and names do not get conflated.
                    type: string
                required:
                - name
                type: object
              environment:
                properties:
                  adapters:
                    additionalProperties:
                      properties:
                        followRedirects:
                          description: Defaults to never.
                          enum:
                          - Never
                          - Always
                          - SameHost
                          type: string
                        headers:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        insecureSkipVerify:
                          description: InsecureSkipVerify controls whether a client
                            verifies the server's certificate chain and host name.
                            If InsecureSkipVerify is true, any certificate presented
                            by the server and any host name in that certificate is
                            accepted. In this mode, TLS is susceptible to machine-in-the-middle
                            attacks.
                          type: boolean
                        type:
                          enum:
                          - db
                          - http
                          type: string
                        url:
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - type
                      type: object
                    type: object
                  name:
                    minLength: 1
                    type: string
                  resourceVersion:
                    type: string
                  uid:
                    description: UID is a type that holds unique ID values, including
                      UUIDs.  Because we don't ONLY use UUIDs, this is an alias to
                      string.  Being a type captures intent and helps make sure that
                      UIDs and names do not get conflated.
                    type: string
                  vars:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - name
                type: object
              version:
                minLength: 1
                type: string
            required:
            - appDeployment
            - environment
            type: object
          status:
            description: ReleaseStatus defines the observed state of Release
            properties:
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
