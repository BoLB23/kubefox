---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: releases.kubefox.xigxog.io
spec:
  group: kubefox.xigxog.io
  names:
    kind: Release
    listKind: ReleaseList
    plural: releases
    singular: release
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              appDeployment:
                properties:
                  name:
                    minLength: 1
                    type: string
                  version:
                    description: Version of the App being released. Use of semantic
                      versioning is recommended. If set the value is compared to the
                      AppDeployment version. If the two versions do not match the
                      release will fail.
                    type: string
                required:
                - name
                type: object
              historyLimit:
                properties:
                  ageDays:
                    description: Age of the oldest archived Release to keep. Age is
                      based on archiveTime.
                    type: integer
                  count:
                    description: Total number of archived Releases to keep. Once the
                      limit is reach the oldest Release will be removed from history.
                      Default 100.
                    type: integer
                type: object
              virtualEnvSnapshot:
                type: string
            required:
            - appDeployment
            type: object
          status:
            properties:
              current:
                properties:
                  appDeployment:
                    properties:
                      name:
                        minLength: 1
                        type: string
                      version:
                        description: Version of the App being released. Use of semantic
                          versioning is recommended. If set the value is compared
                          to the AppDeployment version. If the two versions do not
                          match the release will fail.
                        type: string
                    required:
                    - name
                    type: object
                  archiveTime:
                    format: date-time
                    type: string
                  availableTime:
                    format: date-time
                    type: string
                  requestTime:
                    format: date-time
                    type: string
                  virtualEnvSnapshot:
                    type: string
                required:
                - appDeployment
                type: object
              history:
                items:
                  properties:
                    appDeployment:
                      properties:
                        name:
                          minLength: 1
                          type: string
                        version:
                          description: Version of the App being released. Use of semantic
                            versioning is recommended. If set the value is compared
                            to the AppDeployment version. If the two versions do not
                            match the release will fail.
                          type: string
                      required:
                      - name
                      type: object
                    archiveTime:
                      format: date-time
                      type: string
                    availableTime:
                      format: date-time
                      type: string
                    requestTime:
                      format: date-time
                      type: string
                    virtualEnvSnapshot:
                      type: string
                  required:
                  - appDeployment
                  type: object
                type: array
              requested:
                properties:
                  appDeployment:
                    properties:
                      name:
                        minLength: 1
                        type: string
                      version:
                        description: Version of the App being released. Use of semantic
                          versioning is recommended. If set the value is compared
                          to the AppDeployment version. If the two versions do not
                          match the release will fail.
                        type: string
                    required:
                    - name
                    type: object
                  archiveTime:
                    format: date-time
                    type: string
                  availableTime:
                    format: date-time
                    type: string
                  requestTime:
                    format: date-time
                    type: string
                  virtualEnvSnapshot:
                    type: string
                required:
                - appDeployment
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
