---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: releases.kubefox.xigxog.io
spec:
  group: kubefox.xigxog.io
  names:
    kind: Release
    listKind: ReleaseList
    plural: releases
    singular: release
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Release is the Schema for the Releases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ReleaseSpec defines the desired state of Release
            properties:
              deployment:
                description: DeploymentSpec defines the desired state of Deployment
                properties:
                  app:
                    properties:
                      branch:
                        type: string
                      commit:
                        pattern: ^[a-z0-9]{40}$
                        type: string
                      containerRegistry:
                        type: string
                      description:
                        type: string
                      imagePullSecretName:
                        type: string
                      name:
                        type: string
                      repoURL:
                        type: string
                      tag:
                        type: string
                      title:
                        type: string
                    required:
                    - commit
                    - containerRegistry
                    - name
                    type: object
                  components:
                    additionalProperties:
                      properties:
                        commit:
                          pattern: ^[a-z0-9]{40}$
                          type: string
                        description:
                          type: string
                        image:
                          type: string
                        title:
                          type: string
                      required:
                      - commit
                      type: object
                    type: object
                required:
                - app
                - components
                type: object
              environment:
                properties:
                  name:
                    type: string
                  resourceVersion:
                    type: string
                  uid:
                    description: UID is a type that holds unique ID values, including
                      UUIDs.  Because we don't ONLY use UUIDs, this is an alias to
                      string.  Being a type captures intent and helps make sure that
                      UIDs and names do not get conflated.
                    type: string
                  vars:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - name
                type: object
            required:
            - deployment
            - environment
            type: object
          status:
            description: ReleaseStatus defines the observed state of Release
            properties:
              ready:
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
