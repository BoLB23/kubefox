//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package common

import (
	"github.com/xigxog/kubefox/libs/core/api/uri"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnnotationSelector) DeepCopyInto(out *AnnotationSelector) {
	*out = *in
	if in.MatchAnnotations != nil {
		in, out := &in.MatchAnnotations, &out.MatchAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]v1.LabelSelectorRequirement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnnotationSelector.
func (in *AnnotationSelector) DeepCopy() *AnnotationSelector {
	if in == nil {
		return nil
	}
	out := new(AnnotationSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *App) DeepCopyInto(out *App) {
	*out = *in
	out.GitHashProp = in.GitHashProp
	if in.Vars != nil {
		in, out := &in.Vars, &out.Vars
		*out = new(JSONSchema)
		(*in).DeepCopyInto(*out)
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make(map[string]*AppComponent, len(*in))
		for key, val := range *in {
			var outVal *AppComponent
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(AppComponent)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new App.
func (in *App) DeepCopy() *App {
	if in == nil {
		return nil
	}
	out := new(App)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppComponent) DeepCopyInto(out *AppComponent) {
	*out = *in
	out.ComponentProps = in.ComponentProps
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]*Route, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Route)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppComponent.
func (in *AppComponent) DeepCopy() *AppComponent {
	if in == nil {
		return nil
	}
	out := new(AppComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildUpdateStatusChecks) DeepCopyInto(out *ChildUpdateStatusChecks) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]StatusConditionCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildUpdateStatusChecks.
func (in *ChildUpdateStatusChecks) DeepCopy() *ChildUpdateStatusChecks {
	if in == nil {
		return nil
	}
	out := new(ChildUpdateStatusChecks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentProps) DeepCopyInto(out *ComponentProps) {
	*out = *in
	out.ComponentTypeProp = in.ComponentTypeProp
	out.GitHashProp = in.GitHashProp
	out.ImageProp = in.ImageProp
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentProps.
func (in *ComponentProps) DeepCopy() *ComponentProps {
	if in == nil {
		return nil
	}
	out := new(ComponentProps)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentStatus) DeepCopyInto(out *ComponentStatus) {
	*out = *in
	if in.Deployments != nil {
		in, out := &in.Deployments, &out.Deployments
		*out = make([]uri.Key, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentStatus.
func (in *ComponentStatus) DeepCopy() *ComponentStatus {
	if in == nil {
		return nil
	}
	out := new(ComponentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTypeProp) DeepCopyInto(out *ComponentTypeProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTypeProp.
func (in *ComponentTypeProp) DeepCopy() *ComponentTypeProp {
	if in == nil {
		return nil
	}
	out := new(ComponentTypeProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeControllerChildResourceRule) DeepCopyInto(out *CompositeControllerChildResourceRule) {
	*out = *in
	out.ResourceRule = in.ResourceRule
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(CompositeControllerChildUpdateStrategy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeControllerChildResourceRule.
func (in *CompositeControllerChildResourceRule) DeepCopy() *CompositeControllerChildResourceRule {
	if in == nil {
		return nil
	}
	out := new(CompositeControllerChildResourceRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeControllerChildUpdateStrategy) DeepCopyInto(out *CompositeControllerChildUpdateStrategy) {
	*out = *in
	in.StatusChecks.DeepCopyInto(&out.StatusChecks)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeControllerChildUpdateStrategy.
func (in *CompositeControllerChildUpdateStrategy) DeepCopy() *CompositeControllerChildUpdateStrategy {
	if in == nil {
		return nil
	}
	out := new(CompositeControllerChildUpdateStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeControllerParentResourceRule) DeepCopyInto(out *CompositeControllerParentResourceRule) {
	*out = *in
	out.ResourceRule = in.ResourceRule
	if in.RevisionHistory != nil {
		in, out := &in.RevisionHistory, &out.RevisionHistory
		*out = new(CompositeControllerRevisionHistory)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeControllerParentResourceRule.
func (in *CompositeControllerParentResourceRule) DeepCopy() *CompositeControllerParentResourceRule {
	if in == nil {
		return nil
	}
	out := new(CompositeControllerParentResourceRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeControllerRevisionHistory) DeepCopyInto(out *CompositeControllerRevisionHistory) {
	*out = *in
	if in.FieldPaths != nil {
		in, out := &in.FieldPaths, &out.FieldPaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeControllerRevisionHistory.
func (in *CompositeControllerRevisionHistory) DeepCopy() *CompositeControllerRevisionHistory {
	if in == nil {
		return nil
	}
	out := new(CompositeControllerRevisionHistory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeControllerSpec) DeepCopyInto(out *CompositeControllerSpec) {
	*out = *in
	in.ParentResource.DeepCopyInto(&out.ParentResource)
	if in.ChildResources != nil {
		in, out := &in.ChildResources, &out.ChildResources
		*out = make([]CompositeControllerChildResourceRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResyncPeriodSeconds != nil {
		in, out := &in.ResyncPeriodSeconds, &out.ResyncPeriodSeconds
		*out = new(int32)
		**out = **in
	}
	if in.GenerateSelector != nil {
		in, out := &in.GenerateSelector, &out.GenerateSelector
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeControllerSpec.
func (in *CompositeControllerSpec) DeepCopy() *CompositeControllerSpec {
	if in == nil {
		return nil
	}
	out := new(CompositeControllerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigProp) DeepCopyInto(out *ConfigProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigProp.
func (in *ConfigProp) DeepCopy() *ConfigProp {
	if in == nil {
		return nil
	}
	out := new(ConfigProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControllerRevisionChildren) DeepCopyInto(out *ControllerRevisionChildren) {
	*out = *in
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControllerRevisionChildren.
func (in *ControllerRevisionChildren) DeepCopy() *ControllerRevisionChildren {
	if in == nil {
		return nil
	}
	out := new(ControllerRevisionChildren)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecoratorControllerAttachmentRule) DeepCopyInto(out *DecoratorControllerAttachmentRule) {
	*out = *in
	out.ResourceRule = in.ResourceRule
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(DecoratorControllerAttachmentUpdateStrategy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecoratorControllerAttachmentRule.
func (in *DecoratorControllerAttachmentRule) DeepCopy() *DecoratorControllerAttachmentRule {
	if in == nil {
		return nil
	}
	out := new(DecoratorControllerAttachmentRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecoratorControllerAttachmentUpdateStrategy) DeepCopyInto(out *DecoratorControllerAttachmentUpdateStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecoratorControllerAttachmentUpdateStrategy.
func (in *DecoratorControllerAttachmentUpdateStrategy) DeepCopy() *DecoratorControllerAttachmentUpdateStrategy {
	if in == nil {
		return nil
	}
	out := new(DecoratorControllerAttachmentUpdateStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecoratorControllerResourceRule) DeepCopyInto(out *DecoratorControllerResourceRule) {
	*out = *in
	out.ResourceRule = in.ResourceRule
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.AnnotationSelector != nil {
		in, out := &in.AnnotationSelector, &out.AnnotationSelector
		*out = new(AnnotationSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecoratorControllerResourceRule.
func (in *DecoratorControllerResourceRule) DeepCopy() *DecoratorControllerResourceRule {
	if in == nil {
		return nil
	}
	out := new(DecoratorControllerResourceRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecoratorControllerSpec) DeepCopyInto(out *DecoratorControllerSpec) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]DecoratorControllerResourceRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]DecoratorControllerAttachmentRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResyncPeriodSeconds != nil {
		in, out := &in.ResyncPeriodSeconds, &out.ResyncPeriodSeconds
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecoratorControllerSpec.
func (in *DecoratorControllerSpec) DeepCopy() *DecoratorControllerSpec {
	if in == nil {
		return nil
	}
	out := new(DecoratorControllerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentStatus) DeepCopyInto(out *DeploymentStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentStatus.
func (in *DeploymentStatus) DeepCopy() *DeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(DeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentIdProp) DeepCopyInto(out *EnvironmentIdProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentIdProp.
func (in *EnvironmentIdProp) DeepCopy() *EnvironmentIdProp {
	if in == nil {
		return nil
	}
	out := new(EnvironmentIdProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentProp) DeepCopyInto(out *EnvironmentProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentProp.
func (in *EnvironmentProp) DeepCopy() *EnvironmentProp {
	if in == nil {
		return nil
	}
	out := new(EnvironmentProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Fabric) DeepCopyInto(out *Fabric) {
	*out = *in
	if in.System != nil {
		in, out := &in.System, &out.System
		*out = new(FabricSystem)
		(*in).DeepCopyInto(*out)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = new(FabricEnv)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Fabric.
func (in *Fabric) DeepCopy() *Fabric {
	if in == nil {
		return nil
	}
	out := new(Fabric)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FabricApp) DeepCopyInto(out *FabricApp) {
	*out = *in
	in.App.DeepCopyInto(&out.App)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FabricApp.
func (in *FabricApp) DeepCopy() *FabricApp {
	if in == nil {
		return nil
	}
	out := new(FabricApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FabricEnv) DeepCopyInto(out *FabricEnv) {
	*out = *in
	out.EnvironmentIdProp = in.EnvironmentIdProp
	out.EnvironmentProp = in.EnvironmentProp
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]*Var, len(*in))
		for key, val := range *in {
			var outVal *Var
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Var)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make(map[string]*Var, len(*in))
		for key, val := range *in {
			var outVal *Var
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Var)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.EnvVars != nil {
		in, out := &in.EnvVars, &out.EnvVars
		*out = make(map[string]*Var, len(*in))
		for key, val := range *in {
			var outVal *Var
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Var)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FabricEnv.
func (in *FabricEnv) DeepCopy() *FabricEnv {
	if in == nil {
		return nil
	}
	out := new(FabricEnv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FabricSystem) DeepCopyInto(out *FabricSystem) {
	*out = *in
	out.SystemIdProp = in.SystemIdProp
	out.SystemProp = in.SystemProp
	in.App.DeepCopyInto(&out.App)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FabricSystem.
func (in *FabricSystem) DeepCopy() *FabricSystem {
	if in == nil {
		return nil
	}
	out := new(FabricSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitHashProp) DeepCopyInto(out *GitHashProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitHashProp.
func (in *GitHashProp) DeepCopy() *GitHashProp {
	if in == nil {
		return nil
	}
	out := new(GitHashProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRefProp) DeepCopyInto(out *GitRefProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRefProp.
func (in *GitRefProp) DeepCopy() *GitRefProp {
	if in == nil {
		return nil
	}
	out := new(GitRefProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepoProp) DeepCopyInto(out *GitRepoProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepoProp.
func (in *GitRepoProp) DeepCopy() *GitRepoProp {
	if in == nil {
		return nil
	}
	out := new(GitRepoProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageProp) DeepCopyInto(out *ImageProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageProp.
func (in *ImageProp) DeepCopy() *ImageProp {
	if in == nil {
		return nil
	}
	out := new(ImageProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InheritsProp) DeepCopyInto(out *InheritsProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InheritsProp.
func (in *InheritsProp) DeepCopy() *InheritsProp {
	if in == nil {
		return nil
	}
	out := new(InheritsProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONSchema) DeepCopyInto(out *JSONSchema) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*JSONSchemaProp, len(*in))
		for key, val := range *in {
			var outVal *JSONSchemaProp
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(JSONSchemaProp)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONSchema.
func (in *JSONSchema) DeepCopy() *JSONSchema {
	if in == nil {
		return nil
	}
	out := new(JSONSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONSchemaProp) DeepCopyInto(out *JSONSchemaProp) {
	*out = *in
	out.VarTypeProp = in.VarTypeProp
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONSchemaProp.
func (in *JSONSchemaProp) DeepCopy() *JSONSchemaProp {
	if in == nil {
		return nil
	}
	out := new(JSONSchemaProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSpec) DeepCopyInto(out *PlatformSpec) {
	*out = *in
	if in.Systems != nil {
		in, out := &in.Systems, &out.Systems
		*out = make(map[uri.Key]*PlatformSystem, len(*in))
		for key, val := range *in {
			var outVal *PlatformSystem
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(PlatformSystem)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSpec.
func (in *PlatformSpec) DeepCopy() *PlatformSpec {
	if in == nil {
		return nil
	}
	out := new(PlatformSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformStatus) DeepCopyInto(out *PlatformStatus) {
	*out = *in
	if in.Systems != nil {
		in, out := &in.Systems, &out.Systems
		*out = make(map[uri.Key]*PlatformSystemStatus, len(*in))
		for key, val := range *in {
			var outVal *PlatformSystemStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(PlatformSystemStatus)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformStatus.
func (in *PlatformStatus) DeepCopy() *PlatformStatus {
	if in == nil {
		return nil
	}
	out := new(PlatformStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSystem) DeepCopyInto(out *PlatformSystem) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSystem.
func (in *PlatformSystem) DeepCopy() *PlatformSystem {
	if in == nil {
		return nil
	}
	out := new(PlatformSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSystemStatus) DeepCopyInto(out *PlatformSystemStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSystemStatus.
func (in *PlatformSystemStatus) DeepCopy() *PlatformSystemStatus {
	if in == nil {
		return nil
	}
	out := new(PlatformSystemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelatedResourceRule) DeepCopyInto(out *RelatedResourceRule) {
	*out = *in
	out.ResourceRule = in.ResourceRule
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelatedResourceRule.
func (in *RelatedResourceRule) DeepCopy() *RelatedResourceRule {
	if in == nil {
		return nil
	}
	out := new(RelatedResourceRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseStatus) DeepCopyInto(out *ReleaseStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseStatus.
func (in *ReleaseStatus) DeepCopy() *ReleaseStatus {
	if in == nil {
		return nil
	}
	out := new(ReleaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRule) DeepCopyInto(out *ResourceRule) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRule.
func (in *ResourceRule) DeepCopy() *ResourceRule {
	if in == nil {
		return nil
	}
	out := new(ResourceRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Route) DeepCopyInto(out *Route) {
	*out = *in
	out.RouteTypeProp = in.RouteTypeProp
	if in.CompositeController != nil {
		in, out := &in.CompositeController, &out.CompositeController
		*out = new(CompositeControllerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.DecoratorController != nil {
		in, out := &in.DecoratorController, &out.DecoratorController
		*out = new(DecoratorControllerSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Route.
func (in *Route) DeepCopy() *Route {
	if in == nil {
		return nil
	}
	out := new(Route)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTypeProp) DeepCopyInto(out *RouteTypeProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTypeProp.
func (in *RouteTypeProp) DeepCopy() *RouteTypeProp {
	if in == nil {
		return nil
	}
	out := new(RouteTypeProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretsProp) DeepCopyInto(out *SecretsProp) {
	*out = *in
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make(map[string]*Var, len(*in))
		for key, val := range *in {
			var outVal *Var
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Var)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretsProp.
func (in *SecretsProp) DeepCopy() *SecretsProp {
	if in == nil {
		return nil
	}
	out := new(SecretsProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusConditionCheck) DeepCopyInto(out *StatusConditionCheck) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusConditionCheck.
func (in *StatusConditionCheck) DeepCopy() *StatusConditionCheck {
	if in == nil {
		return nil
	}
	out := new(StatusConditionCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemIdProp) DeepCopyInto(out *SystemIdProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemIdProp.
func (in *SystemIdProp) DeepCopy() *SystemIdProp {
	if in == nil {
		return nil
	}
	out := new(SystemIdProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemProp) DeepCopyInto(out *SystemProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemProp.
func (in *SystemProp) DeepCopy() *SystemProp {
	if in == nil {
		return nil
	}
	out := new(SystemProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Var) DeepCopyInto(out *Var) {
	*out = *in
	if in.arrayNumVal != nil {
		in, out := &in.arrayNumVal, &out.arrayNumVal
		*out = make([]float64, len(*in))
		copy(*out, *in)
	}
	if in.arrayStrVal != nil {
		in, out := &in.arrayStrVal, &out.arrayStrVal
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Var.
func (in *Var) DeepCopy() *Var {
	if in == nil {
		return nil
	}
	out := new(Var)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VarTypeProp) DeepCopyInto(out *VarTypeProp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VarTypeProp.
func (in *VarTypeProp) DeepCopy() *VarTypeProp {
	if in == nil {
		return nil
	}
	out := new(VarTypeProp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VarsProp) DeepCopyInto(out *VarsProp) {
	*out = *in
	if in.Vars != nil {
		in, out := &in.Vars, &out.Vars
		*out = make(map[string]*Var, len(*in))
		for key, val := range *in {
			var outVal *Var
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Var)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VarsProp.
func (in *VarsProp) DeepCopy() *VarsProp {
	if in == nil {
		return nil
	}
	out := new(VarsProp)
	in.DeepCopyInto(out)
	return out
}
